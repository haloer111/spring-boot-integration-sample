input {
  jdbc {
    # 连接的数据库地址和哪一个数据库，指定编码格式，禁用SSL协议，设定自动重连
    jdbc_connection_string => "jdbc:mysql://192.168.2.55:3306/foodie?characterEncoding=UTF-8&useSSL=false&autoReconnect=true"
    jdbc_user => "root"
    jdbc_password => "root"
    # 下载连接数据库的驱动包，建议使用绝对地址
    jdbc_driver_library => "/usr/local/logstash-7.8.0/sync/mysql-connector-java-8.0.15.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    # 开启分页
    jdbc_paging_enabled => "true"
    jdbc_page_size => "10000"
    codec => plain { charset => "UTF-8"}
    # 使用其它字段追踪，而不是用时间
    # 这里如果是用时间追踪比如：数据的更新时间或创建时间等和时间有关的这里一定不能是true, 切记切记切记，我是用update_time来追踪的
    use_column_value => true   
    # 追踪的字段
    tracking_column => updated_time
    tracking_column_type => "timestamp"
    record_last_run => true
    # 上一个sql_last_value值的存放文件路径, 必须要在文件中指定字段的初始值  这里说是必须指定初始值，我没指定默认是1970-01-01 08：00：00
    last_run_metadata_path => "/usr/local/logstash-7.8.0/sync/track_time"
    # 设置时区
    jdbc_default_timezone => "Asia/Shanghai"
    # statement => SELECT * FROM goods  WHERE update_time > :last_sql_value
    # 这里要说明一下如果直接写sql语句，前面这种写法肯定不对的，加上引号也试过也不对，所以我直接写在jdbc.sql文件中  
    statement_filepath => "/usr/local/logstash-7.8.0/sync/foodie-items.sql"
    # 是否清除 last_run_metadata_path 的记录,如果为真那么每次都相当于从头开始查询所有的数据库记录
    clean_run => false
    # 这是控制定时的，重复执行导入任务的时间间隔，第一位是分钟 不设置就是1分钟执行一次
    schedule => "* * * * *"
    type => "_doc"
    # 不进行数据库列名的大小写转换
    "lowercase_column_names" => false
  }
}

# 还不清楚干嘛的
#filter {
#
#  json {
#
#    source => "message"
#
#    remove_field => ["message"]
#
#  }
#
#}

output {
    elasticsearch {
        # 要导入到的Elasticsearch所在的主机
        hosts => ["192.168.2.56:9200"]
        # 要导入到的Elasticsearch的索引的名称
        index => "foodie-items-ik"
        # 设置_id = 你sql语句中的id列，因为这个sql文件主键id as itemId所以要改
        #document_id => "%{id}"
        document_id => "%{itemId}"
        # 重写模板
        template_overwrite => true
        # 模板所在位置
        template => "/usr/local/logstash-7.8.0/sync/logstash-ik.json"
        # 模板名称
        template_name => "myik"
        # 默认为true，false关闭logstash自动管理模板功能，如果使用自定义模板，设置为false
        manage_template => true
    }
    # 日志输出
    stdout {
        # JSON格式输出
        codec => json_lines
    }
}
